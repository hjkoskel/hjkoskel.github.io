{"version":3,"sources":["components/HkoRangeInput.js","components/HkoFaimsForm.js","components/HkoFaimsFlags.js","components/HkoVcSweep.js","components/HkoFaimsWaveVisual.js","utils/substanceSim.js","utils/faimsMath.js","utils/signalSim.js","components/HkoFaimsGauges.js","App.js","index.js"],"names":["HkoRangeInput","id","min","max","step","label","value","onChange","sublabel","Typography","gutterBottom","Slider","ev","marks","HkoFaimsForm","props","useState","coil","values","period","pulse","workState","setWorkState","chHandler","newvalue","newState","changeEvent","faimsPercent","pulseRatio","bitsUsed","stepSizeMicrosec","maxValue","Math","pow","toFixed","HkoFaimsFlags","handleChange","event","onStateChange","target","name","checked","FormControl","component","FormLabel","FormGroup","row","FormControlLabel","control","Switch","sweepOn","shutdown","ionize","pos","neg","pumpOn","sweepUp","attention","faimsEnable","FormHelperText","HkoVcSweep","stepfactor","minStepSize","stepIndexes","round","repeats","sweepMin","sweepMax","ceil","Input","margin","console","log","Number","inputProps","type","HkoFaimsWaveVisual","height","width","viewBox","result","i","push","x","y","stroke","fill","faimsRects","coilpulseHeight","coilIndicators","SubstancePoint","compTd","hvTd","current","hw","this","ratio","another","JSON","stringify","hajonta","sqrt","PI","exp","minComp","maxComp","points","delta","Array","from","length","v","calcCurrent","SubstanceSim","sort","a","b","negPoints","filter","posPoints","arr","findIndex","interpolate","nIdealgas","faimsPeakVoltage","hvdc","vcPlate","DefaultToTownsend","voltage","meters","nmQube","ToTownsend","FaimsSignalSim","substances","initialVc","initialFlags","initialFaims","latestVcMsg","latestFlagsMsg","latestFaimsMsg","runninCounter","gasmixture","hv","vc","vcValue","isNaN","NaN","ions","random","peakHv","FaimsMath","compensationVoltage","peakField","compensationField","onHv","Fpgamsg_response","vcmsg","Promise","resolve","reject","faimsmsg","flagmsg","rollCounter","roll","button","ionizing","faimsEnabled","version","Fpgamsg_faims","Fpgamsg_vc","steps","floor","start","rollingcount","pointInSweep","stepcounter","toFixedHandleNaN","number","decimals","HkoFaimsGauges","returnField","Grid","container","spacing","item","xs","Paper","Box","p","minValue","segments","segmentColors","needleColor","needleTransitionDuration","needleTransition","currentValueText","textColor","customSegmentStops","ts1","TimeSeries","resetBounds","resetBoundsInterval","initial_faims","initial_vc","initial_flags","faimsHardware","App","faimsAsetukset","setFaimsAsetukset","vcAsetukset","setVcAsetukset","flagAsetukset","setFlagasetukset","latestReadout","setReadout","currentSweep","setCurrentSweep","sweepStorage","setSweepStorage","useEffect","simInterval","setInterval","msg","runCycle","undefined","time","Date","getTime","append","concat","firstDir","latestDir","staySame","clearInterval","random2D","tmp","j","Button","variant","color","onClick","d","filename","mime","data","link","document","createElement","setAttribute","Blob","blob","URL","createObjectURL","encodeURIComponent","body","appendChild","click","removeChild","downloadFile","getSeconds","getMinutes","getHours","getDate","getMonth","getFullYear","newSetting","faimsMsg","do_setFaims","then","error","flagname","flagvalue","Boolean","do_setFlags","vcMsg","do_setVc","responsive","tooltip","series","strokeStyle","g","fillStyle","lineWidth","mode","marker","layout","title","autosize","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eb375c3a.chunk.js","sourcesContent":["/*\r\n\r\nMade by Henri Koskela 2021, MIT license\r\n*/\r\nimport React from 'react'\r\nimport { Slider } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst HkoRangeInput = ({ id,min,max,step,label,value,onChange,sublabel }) => {\r\n  //console.log(\"ID:\",id,\"min\",min,\"max\",max)\r\n\r\n  const evChange = (ev,value) => {\r\n    //console.log(\"evChange id=\"+id+\" value=\"+value)\r\n    onChange(id,value)\r\n  }\r\n\r\n  return (\r\n   \r\n    <div>\r\n    <Typography gutterBottom>\r\n      {label} ({sublabel})\r\n    </Typography>\r\n    \r\n    <Slider\r\n      id={id}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      onChange={evChange} //{onChange} //{evChange.bind(this,id,value)} //{hch} //{evChange.bind(this,id,value)}  //{ () => ({\"id\":id, \"value\":value})}\r\n      //valueLabelDisplay=\"on\"\r\n      marks\r\n      value={value}\r\n    />\r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default HkoRangeInput","/*\r\n\r\nMade by Henri Koskela 2021, MIT license\r\n*/\r\nimport HkoRangeInput from './HkoRangeInput'\r\nimport React, { useState } from 'react'\r\n\r\n/*\r\nKomponentti tarvitsee xtal hertsit sekä bittimäärät\r\n*/\r\n\r\nconst HkoFaimsForm = (props) => {\r\n    //console.log(\"props on \"+JSON.stringify(props))\r\n    const [workState, setWorkState]=useState({\r\n        coil:props.values.coil,\r\n        period:props.values.period,\r\n        pulse:props.values.pulse\r\n    })\r\n      \r\n    const chHandler = (ev,newvalue) => {\r\n        let newState={\r\n            coil:workState.coil,\r\n            period:workState.period,\r\n            pulse:workState.pulse\r\n        }\r\n        newState[ev]=newvalue\r\n\r\n        setWorkState(newState)\r\n        props.changeEvent(newState)\r\n    }\r\n\r\n    const faimsPercent=100.0*workState.pulse/workState.period\r\n    const pulseRatio= faimsPercent<50 ? faimsPercent:(faimsPercent-100.0)\r\n    //console.log(\"faimsPercent on \"+faimsPercent)\r\n\r\n    //TODO from props\r\n    const xtalHz=100*1000*1000\r\n    const bitsUsed={\r\n        coil:8,\r\n        period:10,\r\n        pulse:10\r\n    }\r\n\r\n    //In microsec\r\n    const stepSizeMicrosec=1000*1000/xtalHz\r\n\r\n    //In microsec\r\n    const maxValue={\r\n        coil: stepSizeMicrosec*(Math.pow(2,bitsUsed.coil)-1),\r\n        period: stepSizeMicrosec*(Math.pow(2,bitsUsed.period)-1),\r\n        pulse: stepSizeMicrosec*(Math.pow(2,bitsUsed.pulse)-1)\r\n    }\r\n\r\n    //console.log(\"max values\",maxValue)\r\n\r\n    return (\r\n        <form>\r\n            <HkoRangeInput\r\n                id=\"period\"\r\n                min={0} max={maxValue.period} step={stepSizeMicrosec}\r\n                label=\"Faims Period \"\r\n                sublabel={workState.period+\" µs \"+ (1000/workState.period).toFixed(2)+\"kHz\"}\r\n                onChange={chHandler}  value={workState.period} />\r\n\r\n            <HkoRangeInput\r\n                id=\"pulse\"\r\n                min={0} max={Math.min(maxValue.pulse,workState.period)} step={stepSizeMicrosec} \r\n                label=\"Faims Pulse\"\r\n                sublabel={workState.pulse+\" µs, \"+ pulseRatio.toFixed(2)+\"%\"} onChange={chHandler} value={workState.pulse} />\r\n            <br></br>\r\n            <HkoRangeInput \r\n                id=\"coil\"\r\n                min={0} max={Math.min(maxValue.coil,workState.period)} step={stepSizeMicrosec}\r\n                label=\"Coil Work\"\r\n                sublabel={workState.coil+\" µs, \"+ (100.0*workState.coil/workState.period).toFixed(2)+\"%\"}\r\n                onChange={chHandler} value={workState.coil} />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default HkoFaimsForm","/*\r\n\r\nMade by Henri Koskela 2021, MIT license\r\n*/\r\n\r\nimport React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function HkoFaimsFlags(props) {\r\n  const handleChange = (event) => {\r\n    props.onStateChange(event.target.name,event.target.checked)\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Hardware flags</FormLabel>\r\n      <FormGroup row>\r\n        <FormControlLabel\r\n          control={<Switch checked={props.sweepOn} onChange={handleChange} name=\"sweepOn\" />}\r\n          label=\"Sweep On\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={props.shutdown} onChange={handleChange} name=\"shutdown\" />}\r\n          label=\"Shutdown\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={props.ionize} onChange={handleChange} name=\"ionize\" />}\r\n          label=\"Ionize\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={props.pos} onChange={handleChange} name=\"pos\" />}\r\n          label=\"Positive\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={props.neg} onChange={handleChange} name=\"neg\" />}\r\n          label=\"Negative\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={props.pumpOn} onChange={handleChange} name=\"pumpOn\" />}\r\n          label=\"Pump\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={props.sweepUp} onChange={handleChange} name=\"sweepUp\" />}\r\n          label=\"Sweep Up\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={props.attention} onChange={handleChange} name=\"attention\" />}\r\n          label=\"Attention\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={props.faimsEnable} onChange={handleChange} name=\"faimsEnable\" />}\r\n          label=\"FAIMS enable\"\r\n        />\r\n      </FormGroup>\r\n      <FormHelperText>Be careful</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport { Slider,Input } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst HkoVcSweep = (props) => {\r\n  const stepfactor=Math.pow(2,12) //all are 12bit numbers now\r\n  const minStepSize=29.0/stepfactor\r\n  const [workState, setWorkState]=useState({\r\n    step:props.values.step,//Not so accurate!!\r\n    stepIndexes: Math.max(1,Math.round(props.values.step/minStepSize)), //How many indexes are\r\n    repeats:props.values.repeats,\r\n    sweepMin:props.values.sweepMin,\r\n    sweepMax:props.values.sweepMax\r\n  })\r\n\r\n\r\n /*\r\n  const evChange = (ev,value) => {\r\n    console.log(\"evChange id=\"+id+\" value=\"+value)\r\n    onChange(id,value)\r\n  }\r\n  */\r\n\r\n  /*\r\n  12bit luvut\r\n  - repeats 12bit,  SUORAAN\r\n  - step   0-29, 12bit , tämä on toivomus \"resoluutiosta\"\r\n\r\n  - start -5 -> 24v  NÄÄ KORVATAAN sweepMin ja sweepMax. suunnan perusteella\r\n  - steps,  stepsien määrä rajoittuu kuinka monta sweepMin ja sweepMax väliin mahtuu\r\n\r\n  ulkopuolelta tule propsista\r\n  sweepUp  \r\n  FAIMS prosenttiratio polariteetti jätetään harjoitukseksi\r\n\r\n  KAKSI eri moodia näytössä, se missä range ja missä yksi arvo\r\n\r\n  */\r\n\r\n  //const classes = useStyles(); //TODO TARVIIKO\r\n  \r\n\r\n  const vcmarks = [\r\n    {value: -5,label:\"-5V\"},\r\n    {value: 0, label: \"0V\"},\r\n    {value: 5, label: \"5V\"},\r\n    {value: 10, label: \"10V\"},\r\n    {value: 15, label: \"15V\"},\r\n    {value: 20, label: \"20V\"},\r\n    {value: 24,label: \"24V\"}\r\n  ];\r\n\r\n  const handleStepChange = (event) => {\r\n    console.log(\"step changed to \"+event.target.value)\r\n   \r\n    const newState={\r\n      step:event.target.value,\r\n      stepIndexes:Math.max(1,Math.round(Number(event.target.value)/minStepSize)),\r\n      repeats:workState.repeats,\r\n      sweepMin:workState.sweepMin,\r\n      sweepMax:workState.sweepMax\r\n    }\r\n    setWorkState(newState)\r\n    props.changeEvent(newState)\r\n  };\r\n\r\n  const handleRepeatsChange = (event) => {\r\n    console.log(\"repeats changed to \"+event.target.value)\r\n    \r\n    const newState={\r\n      step:workState.value,\r\n      stepIndexes:workState.stepIndexes ,\r\n      repeats:Number(event.target.value),\r\n      sweepMin:workState.sweepMin,\r\n      sweepMax:workState.sweepMax\r\n    }\r\n    setWorkState(newState)\r\n    props.changeEvent(newState)\r\n  };\r\n\r\n  const evVcRangeChange = (ev,value) => {\r\n    //console.log(\"vcRangeChange value=\"+value)\r\n    \r\n    const newState={\r\n      step:workState.step,\r\n      stepIndexes:workState.stepIndexes ,\r\n      repeats:workState.repeats,\r\n      sweepMin:Number(value[0]),\r\n      sweepMax:Number(value[1])\r\n    }\r\n    setWorkState(newState)\r\n    props.changeEvent(newState)\r\n  }\r\n\r\n\r\n  return (\r\n   \r\n    <div>\r\n\r\n      <Typography id=\"lblsteps\" gutterBottom>\r\n        Step (resolution) step count= {Math.ceil((workState.sweepMax-workState.sweepMin)/(workState.stepIndexes*minStepSize))}\r\n      </Typography>\r\n\r\n      <Input\r\n        id=\"inputStepsize\"\r\n        //className={classes.input}\r\n        value={(workState.stepIndexes*minStepSize)}\r\n        margin=\"dense\"\r\n        onChange={handleStepChange}\r\n        //onBlur={handleBlur}\r\n        inputProps={{\r\n              step: minStepSize,\r\n              min: minStepSize,\r\n              max: 10,\r\n              type: 'number',\r\n              'aria-labelledby': 'lblsteps',\r\n            }}\r\n      />\r\n\r\n      <Typography id=\"lblrepeats\" gutterBottom>\r\n        Repeats\r\n      </Typography>\r\n\r\n      <Input\r\n        id=\"inputRepeats\"\r\n        //className={classes.input}\r\n        value={workState.repeats}\r\n        margin=\"dense\"\r\n        onChange={handleRepeatsChange}\r\n        //onBlur={handleBlur}\r\n        inputProps={{\r\n              step: 1,\r\n              min: 0,\r\n              max: stepfactor-1,\r\n              type: 'number',\r\n              'aria-labelledby': 'lblrepeats',\r\n            }}\r\n      />\r\n\r\n\r\n    <Typography gutterBottom>\r\n      VC range ({workState.sweepMin.toFixed(2)} to {workState.sweepMax.toFixed(2)})\r\n    </Typography>\r\n    \r\n    <Slider\r\n      id=\"vcRange\"\r\n      step={minStepSize}\r\n      min={-5.0}\r\n      max={24.0}\r\n      onChange={evVcRangeChange}\r\n      marks={vcmarks}\r\n      value={[workState.sweepMin,workState.sweepMax]}\r\n    />\r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default HkoVcSweep","/*\r\n\r\nMade by Henri Koskela 2021, MIT license\r\n*/\r\nimport React from 'react'\r\n\r\n/*\r\nPieni kontrolli joka\r\n*/\r\n\r\nconst HkoFaimsWaveVisual = ({pulse,period,coil}) => {\r\n    const coilpulseHeight=8\r\n    const numberOfWaves=6\r\n    /*\r\n    const coilwaveform= () => {\r\n        let result=[]\r\n        for(let i=0;i<10;i++){\r\n      \r\n            \r\n                result.push(<line x1={i*period} y1={0} x2={i*period} y2={coilpulseHeight} stroke=\"rgb(0,255,0)\" />)\r\n                result.push(<line x1={i*period} y1={10} x2={i*period+(period-pulse)} y2={10} stroke=\"rgb(0,255,0)\" />)\r\n                result.push(<line x1={pulse} y1={10} x2={10} y2={10} stroke=\"rgb(0,255,0)\" />)\r\n                result.push(<line x1={10} y1={10} x2={10} y2={0} stroke=\"rgb(0,255,0)\" />)\r\n        \r\n            )\r\n        }\r\n        return result\r\n    }*/\r\n\r\n    /*\r\n    let s=\"M 0 1\"\r\n    for(let i=0;i<10;i++){\r\n        s+=\"l 0 \"+coilpulseHeight+\" l \"+(period-pulse)+\" 0 l 0 \"+(-coilpulseHeight)+\" l \"+pulse+\" 0 \"\r\n        //l 0 \"+coilpulseHeight+\" l \"+(period-pulse)+\" 0 l 0 \"+(-coilpulseHeight)+\" l \"+pulse+\" 0 l 0 \"+coilpulseHeight+\" l \"+(period-pulse)+\" 0 l 0 \"+(-coilpulseHeight)+\" l \"+pulse+\" 0\"\r\n    }\r\n   <path d={s} stroke=\"rgb(0,255,0)\"/>\r\n\r\n    */\r\n\r\n    const faimsRects = () =>{\r\n        let result=[]\r\n        for(let i=0;i<numberOfWaves;i++){\r\n            result.push(<rect key={\"faimsrect\"+i} x={period*i} y={0} width={pulse} height={coilpulseHeight} stroke={\"rgb(0,255,0)\"} fill={\"rgb(0,255,0)\"} />)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const coilIndicators = () => {\r\n        let result=[]\r\n        for(let i=0;i<numberOfWaves;i++){\r\n            result.push(<rect key={\"coilrect\"+i} x={period*i} y={coilpulseHeight-1} width={coil} height={coilpulseHeight} stroke={\"rgb(255,0,0)\"} fill={\"rgb(255,0,0)\"} />)\r\n        }\r\n        return result\r\n    }\r\n\r\n    return (\r\n    <svg height=\"100%\" width=\"100%\" viewBox={\"0 0 200 10\"}>\r\n        {faimsRects()}\r\n        {coilIndicators()}\r\n    </svg>\r\n    )\r\n}\r\n\r\nexport default HkoFaimsWaveVisual","\r\n/*\r\nSubstance simulator\r\n\r\nSimple model how component behaves  (RIP or RIN is )\r\n\r\nTODO: later how pulse ratio changes behaviour  (absolute mobility?) And how humidity\r\n\r\nSubstance is array of entries of PEAK\r\n    - compensation (Td)\r\n    - HV (Td)\r\n\r\nand peak half width (wider-> substance reactions?)\r\n\r\nMade by Henri Koskela 2021, MIT license\r\n*/\r\n\r\n\r\nclass SubstancePoint{\r\n    constructor(pos,compTd,hvTd,current,hw){\r\n        this.pos=pos  //Bool\r\n        this.compTd=compTd //peak position\r\n        this.hvTd=hvTd //unique\r\n        this.current=current //Arbitary unit, scaled with flow\r\n        this.hw=hw //Half width\r\n    }\r\n\r\n    //Ratio, how much this\r\n    interpolate(ratio,another){\r\n        //console.log(\"Interpolate on \"+JSON.stringify(this) +\" with ANOTHER=\"+JSON.stringify(another)+\"  ratio=\"+ratio)\r\n        const result=new SubstancePoint(\r\n            this.pos,\r\n            this.compTd*ratio+(1-ratio)*another.compTd,\r\n            this.hvTd*ratio+(1-ratio)*another.hvTd,\r\n            this.current*ratio+(1-ratio)*another.current,\r\n            this.hw*ratio+(1-ratio)*another.hw,\r\n        )\r\n        console.log(\"interpolation result \"+JSON.stringify(result))\r\n        return result\r\n    }\r\n\r\n    calcCurrent(compTd){\r\n        const hajonta=this.hw/(2*Math.sqrt(2*Math.log(2)))\r\n        const result=(this.current/(hajonta*Math.sqrt(2*Math.PI))) * Math.exp(-(compTd-this.compTd)*(compTd-this.compTd)/(2*hajonta))\r\n        if (this.pos){\r\n            return  result\r\n        }\r\n        return -1*result\r\n    }\r\n\r\n    //Calculates current vector,  \r\n    evaluateXY(minComp,maxComp,points){\r\n        const delta=(maxComp-minComp)/points\r\n        const xarr=Array.from({ length: points }, (v, i) => i*delta+minComp)\r\n        const yarr=Array.from({ length: points }, (v, i) => this.calcCurrent(i*delta+minComp))\r\n        return [xarr,yarr]\r\n    }\r\n\r\n}\r\n\r\nclass SubstanceSim{\r\n    constructor(name,points){\r\n        this.name=name\r\n        points.sort((a,b)=> a.hvTd-b.hvTd)\r\n        this.negPoints=points.filter( a => a.pos===false )\r\n        this.posPoints=points.filter( a => a.pos===true )\r\n        //SORT by hvTd\r\n\r\n        //console.log(\"neg pisteet \"+JSON.stringify(this.points.filter( a => a.pos===false )))\r\n\r\n    }\r\n\r\n    interpolate(pos,hvTd){\r\n        let arr=this.posPoints\r\n        if (!pos){\r\n            arr=this.negPoints\r\n        }\r\n        \r\n        //console.log(\"Picking pos=\"+pos+\" arr=\"+JSON.stringify(arr))\r\n\r\n        const i=arr.findIndex( (a) => hvTd<a.hvTd )\r\n        //console.log(\"i=\"+i)\r\n        if (i<1){\r\n            return arr[0] //Out of range\r\n        }\r\n        const ratio=(hvTd-arr[i-1].hvTd)/(arr[i].hvTd-arr[i-1].hvTd)\r\n        return arr[i].interpolate(ratio,arr[i-1])\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport {SubstancePoint,SubstanceSim}","\r\n/*\r\nFaims math, utility functions for calculating and converting\r\n\r\nhttps://en.wikipedia.org/wiki/Townsend_(unit)\r\n\r\n\r\nMade by Henri Koskela 2021, MIT license\r\n*/\r\n\r\nexport const boltzmanConstant=1.380649*10**-23  // J/K\r\nexport const nIdealgas=2.6867811*10**25  //at 1atm\r\nexport const plateGap=0.25/1000\r\n\r\n\r\nexport function ToTownsend(voltage,meters,nmQube){\r\n    return ((voltage/meters)/nmQube) / (10**-21)\r\n}\r\n\r\n/*\r\nFor configuration where one plate revieves  hvdc peak to peak FAIMS signal, averaged by capacitor to gnd\r\nand another plate is connected to VC dac\r\n\r\n*/\r\n\r\nexport function faimsPeakVoltage(hvdc,vcPlate,pulse,period){\r\n    if(period===0){\r\n        return 0\r\n    }\r\n    const avg=hvdc*pulse/period //Averaged from capacitor\r\n    return hvdc-avg-vcPlate //Increase VC, peak voltage is less\r\n}\r\n\r\n//actual return voltage compared to ground. Field that moves.\r\nexport function faimsReturnVoltage(hvdc,vcPlate,pulse,period){\r\n    //TODO HUOMIOI YLI 50 prosentin pulssisuhde!!!\r\n    const avg=hvdc*pulse/period //Averaged from capacitor\r\n    return vcPlate+avg\r\n}\r\n\r\n\r\n//Use ideal gas at this demonstration\r\nexport function DefaultToTownsend(voltage){\r\n    return ToTownsend(voltage,plateGap,nIdealgas)\r\n}\r\n","/*\r\nSimulated FAIMS substance\r\nUsed for online demos\r\n\r\nFixed temperature, pressure and humidity\r\n\r\nAnd fixed chemical\r\nMade by Henri Koskela 2021, MIT license\r\n*/\r\n\r\nimport {SubstancePoint,SubstanceSim} from './substanceSim.js'\r\n\r\nimport * as FaimsMath from './faimsMath.js';\r\n\r\nclass FaimsSignalSim {\r\n    constructor(substances,initialVc,initialFlags,initialFaims){\r\n        this.latestVcMsg=initialVc\r\n        this.latestFlagsMsg=initialFlags\r\n        this.latestFaimsMsg=initialFaims\r\n        this.runninCounter=0 //This re sets when commands are set\r\n        this.gasmixture=[\r\n            new SubstanceSim(\"aineA\",[\r\n                //(pos,compTd,hvTd,current,hw)\r\n                new SubstancePoint(true , 0   ,0,    50/5,     0.02),\r\n                new SubstancePoint(true , 1.2   ,60,    20/5,     0.02),\r\n                new SubstancePoint(true , 3   ,130,    5/5,     0.02),\r\n                new SubstancePoint(false , 0   ,0,    50/5,     0.02),\r\n                new SubstancePoint(false , 1.2   ,60,    20/5,     0.02),\r\n                new SubstancePoint(false , 3   ,130,    5/5,     0.02)\r\n            ]),\r\n            new SubstanceSim(\"aineB\",[\r\n                //(pos,compTd,hvTd,current,hw)\r\n                new SubstancePoint(true , 0   ,0,    50/5,     0.02),\r\n                new SubstancePoint(true , 1.7   ,60,    10/5,     0.02),\r\n                new SubstancePoint(true , 6   ,130,    3.5/5,     0.02),\r\n                new SubstancePoint(false , 0   ,0,    50/5,     0.02),\r\n                new SubstancePoint(false , 1.6   ,60,    10/5,     0.02),\r\n                new SubstancePoint(false , 6   ,130,    5/5,     0.02)\r\n            ])\r\n        ]\r\n    }\r\n\r\n    runCycle(){\r\n        //console.log(\"RUN CYCLE\",this)\r\n        //Dummy estimate from duty cycle\r\n        const hv= this.latestFlagsMsg.faimsEnable ?  3000*this.latestFaimsMsg.coil/this.latestFaimsMsg.period:0\r\n        const vc=this.latestVcMsg.vcValue(this.runninCounter)\r\n \r\n        //console.log(\"runCycle: hv=\"+hv+\" vc=\"+vc)\r\n\r\n        if (Number.isNaN(hv)|| Number.isNaN(vc)){\r\n            return NaN\r\n        }\r\n        //console.log(\"hv=\"+hv+\" vc=\"+vc)\r\n\r\n        let ions = 25*(Math.random()-.5)\r\n\r\n        //console.log(\"BIAS  pos=\"+this.latestFlagsMsg.pos+\" neg=\"+this.latestFlagsMsg.neg)\r\n\r\n        if ( ((this.latestFlagsMsg.pos)||(this.latestFlagsMsg.neg)) && (this.latestFlagsMsg.ionize) && (this.latestFlagsMsg.pumpOn) ) {\r\n            const peakHv=FaimsMath.faimsPeakVoltage(hv,vc,this.latestFaimsMsg.pulse,this.latestFaimsMsg.period)\r\n            //const returnVoltage=FaimsMath.faimsReturnVoltage(hv,vc,this.latestFaimsMsg.pulse,this.latestFaimsMsg.period)\r\n            const compensationVoltage=vc\r\n\r\n            if (Number.isNaN(peakHv)|| Number.isNaN(compensationVoltage)){\r\n                return NaN\r\n            }\r\n            const peakField=FaimsMath.DefaultToTownsend(peakHv)\r\n            const compensationField=FaimsMath.DefaultToTownsend(compensationVoltage)\r\n            //console.log(\"peakField=\"+peakField+\" compensationField\"+compensationField)\r\n            for(let gas of this.gasmixture){\r\n                //console.log(\"gas=\"+JSON.stringify(gas)+\"\")\r\n                let onHv=gas.interpolate(this.latestFlagsMsg.pos,peakField)\r\n                //console.log(\"Interpolate gas=\"+gas.name+\" onHv=\"+JSON.stringify(onHv))\r\n                if ((this.latestFlagsMsg.pos)||(this.latestFlagsMsg.neg)){\r\n                    if (onHv!==0){\r\n                        ions+=onHv.calcCurrent(compensationField)\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            if ((this.latestFlagsMsg.pos)||(this.latestFlagsMsg.neg)){\r\n            //console.log(\"NEUTRAL bias\")\r\n            }else{\r\n                //console.log(\"Just noise  ionize=\"+this.latestFlagsMsg.ionize+\" pumpOn=\")\r\n            }\r\n        }\r\n\r\n        //const ions=Math.random()*1000-500\r\n        //onNewData( new Fpgamsg_response(this.runninCounter, ions,hv,vc,this.latestFlagsMsg.ionize,  this.latestFlagsMsg.faimsEnable))\r\n        \r\n        const result=new Fpgamsg_response(this.runninCounter, ions,hv,vc,this.latestFlagsMsg.ionize,  this.latestFlagsMsg.faimsEnable)\r\n\r\n        if (this.latestFlagsMsg.sweepOn){\r\n            this.runninCounter++\r\n            //console.log(\"RUNNING \",this.runninCounter)\r\n        }else{\r\n            //console.log(\"HALTED\")\r\n        }\r\n        return result\r\n    }\r\n\r\n    //Commands with promises, common with actual hardware interface\r\n    do_setVc(vcmsg){\r\n        //console.log(\"running do_setVc type=\"+(typeof vcmsg)+ \" data=\"+JSON.stringify(vcmsg))\r\n        //console.log(\"@@@@@@@@@@@@@@@@\",\"@@@@@@ promising vc vcmsg\",vcmsg)\r\n        this.latestVcMsg=vcmsg\r\n        this.runninCounter=0\r\n        return new Promise((resolve, reject) => {\r\n            resolve() //Works at every time in this sim\r\n          })\r\n    }\r\n\r\n    do_setFaims(faimsmsg){\r\n        //console.log(\"running do_setFaims type=\"+(typeof faimsmsg)+ \" data=\"+JSON.stringify(faimsmsg))\r\n        this.latestFaimsMsg=faimsmsg\r\n        this.runninCounter=0\r\n       return new Promise((resolve, reject) => {\r\n            resolve() //Works at every time in this sim\r\n          })\r\n    }\r\n\r\n    do_setFlags(flagmsg){\r\n        //console.log(\"running do_setFlags type=\"+(typeof flagmsg)+ \" data=\"+JSON.stringify(flagmsg))\r\n        this.latestFlagsMsg=flagmsg\r\n        this.runninCounter=0\r\n        return new Promise((resolve, reject) => {\r\n            resolve() //Works at every time in this sim\r\n          })\r\n    }\r\n}\r\n\r\n\r\n/*\r\nMessages\r\n*/\r\n\r\nclass Fpgamsg_response {\r\n    constructor(rollCounter, ions,hv,vc,ionize,faimsEnable ){\r\n        this.ions=ions\r\n        this.hv=hv\r\n        this.vc=vc\r\n        this.roll=rollCounter%512\r\n        this.button=false\r\n        this.ionizing=ionize\r\n        this.faimsEnabled=faimsEnable\r\n        this.version=69\r\n    }\r\n}\r\n\r\nclass Fpgamsg_faims {\r\n    constructor({coil=0,period=0,pulse=0}={}){ //Translates from UI names\r\n        this.coil=coil\r\n        this.period=period\r\n        this.pulse=pulse\r\n    }\r\n}\r\n\r\nclass Fpgamsg_vc {\r\n    constructor({ step=0, repeats=1, sweepMin=0, sweepMax=0 }={},sweepUp=true){ //Calculates register values\r\n        this.step=step\r\n        this.repeats=repeats\r\n        if (this.step===0){\r\n            this.steps=0\r\n        }else{\r\n            this.steps=Math.floor((sweepMax-sweepMin)/step)\r\n        }\r\n        this.sweepUp=sweepUp\r\n        if(sweepUp){\r\n            this.start=sweepMin\r\n        }else{\r\n            this.start=sweepMax\r\n        }\r\n    }\r\n\r\n    vcValue(rollingcount){ //Utility function for calculating vc\r\n        if (this.steps<1){\r\n            return this.start\r\n        }\r\n        let repeats=Math.min(1,this.repeats)        \r\n        const pointInSweep=rollingcount % (this.steps*repeats)\r\n        const stepcounter=Math.floor(pointInSweep/repeats)\r\n\r\n        if (this.sweepUp){\r\n            //console.log(\"Sweep UP \"+stepcounter+\" steps size=\"+this.step+\" from \"+this.start)\r\n            return this.start+stepcounter*this.step\r\n        }\r\n        //console.log(\"Sweep DOWN \"+stepcounter+\" steps size=\"+this.step+\" from \"+this.start)\r\n        return this.start-stepcounter*this.step\r\n    }\r\n}\r\n\r\nclass Fpgamsg_flags {\r\n    constructor({\r\n            sweepOn=false,\r\n            shutdown=false,\r\n            ionize=false,\r\n            pos=false,\r\n            neg=false,\r\n            pumpOn=false,\r\n            sweepUp=true,\r\n            attention=false,\r\n            faimsEnable=false\r\n    } = {}){\r\n        this.sweepOn=sweepOn;\r\n        this.shutdown=shutdown;\r\n        this.ionize=ionize;\r\n        this.pos=pos;\r\n        this.neg=neg;\r\n        this.pumpOn=pumpOn;\r\n        this.sweepUp=sweepUp;\r\n        this.attention=attention;\r\n        this.faimsEnable=faimsEnable;\r\n    }\r\n}\r\n\r\n\r\nexport {FaimsSignalSim,Fpgamsg_response,Fpgamsg_faims,Fpgamsg_vc,Fpgamsg_flags}\r\n","/*\r\n\r\nMade by Henri Koskela 2021, MIT license\r\n*/\r\nimport React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// https://npm.io/package/react-d3-speedometer\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\n\r\n\r\nfunction toFixedHandleNaN(number,decimals){\r\n  if (typeof number === 'undefined') {\r\n    return \"udef\"\r\n  }\r\n  if (Number.isNaN(number)){\r\n    return NaN\r\n  }\r\n  return number.toFixed(decimals)\r\n}\r\n\r\nconst HkoFaimsGauges = ({ions,vc,hvdc, returnField,peakField,compensationField}) => {\r\n\r\n    return (\r\n    <Grid container spacing={3}>\r\n    <Grid item xs>\r\n      <Paper>\r\n        <Box p={2}>\r\n          <ReactSpeedometer\r\n            id=\"ionGauge\"\r\n            minValue={-500} maxValue={500}\r\n            value={ions} segments={2}\r\n            segmentColors={[\"#3377FF\",\"#FF3933\"]}\r\n            needleColor=\"steelblue\"\r\n            needleTransitionDuration={100}\r\n            needleTransition=\"easeElastic\"\r\n            currentValueText={\"Ions: \"+   toFixedHandleNaN(ions,2)+\" pA\"}\r\n            textColor={'#AAA'}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </Grid>\r\n    <Grid item xs>\r\n      <Paper>\r\n        <Box p={2}>\r\n          <ReactSpeedometer\r\n            id=\"vcGauge\"\r\n            minValue={-5} maxValue={24}\r\n            value={vc} segments={2}\r\n            segmentColors={[\"#00FBFF\",\"#FFFF00\"]}\r\n            customSegmentStops={[-5,0,24]}\r\n            needleColor=\"steelblue\"\r\n            needleTransitionDuration={100}\r\n            needleTransition=\"easeElastic\"\r\n            currentValueText={\"VC: \"+toFixedHandleNaN(vc,3)+\"\\nfield:\"+toFixedHandleNaN(returnField,3)+\" Td\\ncomp \"+toFixedHandleNaN(compensationField,3)} //\"Vc: ${value} V\\nreturnField ${returnField}\"\r\n            textColor={'#AAA'}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </Grid>\r\n    <Grid item xs>\r\n      <Paper>\r\n        <Box p={2}>\r\n          <ReactSpeedometer\r\n            id=\"hvGauge\"\r\n            minValue={0}\r\n            maxValue={1000}\r\n            value={hvdc}\r\n            segments={3}  //too low, norminal, too high\r\n            segmentColors={[\"#C2C2C2\",\"#4FFF20\",\"#FF0000\"]}\r\n            customSegmentStops={[0,100,800,1000]}\r\n            needleColor=\"steelblue\"\r\n            needleTransitionDuration={100}\r\n            needleTransition=\"easeElastic\"\r\n            currentValueText={\"HVDC: \"+toFixedHandleNaN(hvdc,1)+\" field:\"+toFixedHandleNaN(peakField,2)+\" Td\"} //\"HVDC : ${value} V\\npeakField : ${peakField}\"\r\n            textColor={'#AAA'}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </Grid>\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default HkoFaimsGauges","import React, { useState,useEffect } from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nimport HkoFaimsForm from './components/HkoFaimsForm';\nimport HkoFaimsFlags from './components/HkoFaimsFlags';\nimport HkoVcSweep from './components/HkoVcSweep';\n\nimport HkoFaimsWaveVisual from './components/HkoFaimsWaveVisual'\nimport SmoothieComponent, { TimeSeries } from 'react-smoothie';\n\nimport {FaimsSignalSim,Fpgamsg_vc, Fpgamsg_faims, Fpgamsg_flags} from './utils/signalSim.js';\nimport * as FaimsMath from './utils/faimsMath.js';\nimport HkoFaimsGauges from './components/HkoFaimsGauges';\n\n\nimport Plot from 'react-plotly.js';\nimport { Button } from '@material-ui/core';\n\n\n\nconst ts1 = new TimeSeries({\n  resetBounds: true,\n  resetBoundsInterval: 3000,\n});\n\nconst initial_faims={coil:0.25,period:2.5,pulse:0.13}\nconst initial_vc={step:0.276123046875, repeats:1, sweepMin:-4, sweepMax:18 }\nconst initial_flags={sweepOn:true, shutdown:false, ionize:true, pos:true, neg:false, pumpOn:true, sweepUp:false, attention:false, faimsEnable:true}\n\nconst faimsHardware=new FaimsSignalSim([],new Fpgamsg_vc(initial_vc),new Fpgamsg_flags(initial_flags),new Fpgamsg_faims(initial_faims))\n\nconst App = () => {\n  const [faimsAsetukset,setFaimsAsetukset]=useState(initial_faims)\n  const [vcAsetukset,setVcAsetukset]=useState(initial_vc)\n  const [flagAsetukset,setFlagasetukset]=useState(initial_flags)\n  \n\n  const [latestReadout,setReadout]=useState({ions:0,vc:0,hv:0})\n  //const aa= new SubstancePoint()\n  const [currentSweep,setCurrentSweep]=useState({ions:[],vc:[],hv:[],roll:[],button:[],ionizing:[],faimsEnabled:[]})\n  const [sweepStorage,setSweepStorage]=useState([]) //array of arrays\n  \n  useEffect(() => {\n\n\n\n    const simInterval=setInterval(() => {\n      const msg=faimsHardware.runCycle()\n      //console.log(\"SIM cycle gave \",msg)\n      if (typeof msg==undefined){\n        //console.log(\"undefined msg\")\n        return\n      }\n      if (Number.isNaN(msg)){\n        //console.log(\"msg is NaN\")\n        return\n      }\n\n      if (typeof msg.ions==undefined){\n        //console.log(\"IONS UNDEFINED\")\n        return\n      }\n\n      setReadout({ions:msg.ions,vc:msg.vc,hv:msg.hv})\n\n      var time = new Date().getTime();\n    \n      ts1.append(time, msg.ions);\n\n      if (typeof currentSweep ===undefined){\n        return\n      }\n      if (typeof sweepStorage ===undefined){\n        return\n      }\n\n      if (currentSweep.ions.length<2){\n        currentSweep.ions=currentSweep.ions.concat(msg.ions)\n        currentSweep.vc=currentSweep.vc.concat(msg.vc)\n        currentSweep.hv=currentSweep.vc.concat(msg.hv)\n\n        currentSweep.roll=currentSweep.roll.concat(msg.roll)\n        currentSweep.button=currentSweep.button.concat(msg.button)\n        currentSweep.ionizing=currentSweep.ionizing.concat(msg.ionizing)\n        currentSweep.faimsEnabled=currentSweep.faimsEnabled.concat(msg.faimsEnabled)\n\n        setCurrentSweep(currentSweep)\n      }else{\n        const firstDir=(0<(currentSweep.vc[1]-currentSweep.vc[0]));\n        const latestDir=(0<(currentSweep.vc[currentSweep.vc.length-1]-currentSweep.vc[currentSweep.vc.length-2]));\n        const staySame= (currentSweep.vc[currentSweep.vc.length-1]===currentSweep.vc[currentSweep.vc.length-2])\n        //console.log(\"firstDir=\"+firstDir+\" latestDir=\"+latestDir)\n\n        if ((firstDir===latestDir)||(staySame)) {\n          currentSweep.ions=currentSweep.ions.concat(msg.ions)\n          currentSweep.vc=currentSweep.vc.concat(msg.vc)\n          currentSweep.hv=currentSweep.vc.concat(msg.hv)\n\n          currentSweep.roll=currentSweep.roll.concat(msg.roll)\n          currentSweep.button=currentSweep.button.concat(msg.button)\n          currentSweep.ionizing=currentSweep.ionizing.concat(msg.ionizing)\n          currentSweep.faimsEnabled=currentSweep.faimsEnabled.concat(msg.faimsEnabled)\n  \n          setCurrentSweep(currentSweep)\n        }else{\n            setSweepStorage([...sweepStorage,currentSweep]) //TODO RING BUFFER?         \n            setCurrentSweep({ions:[],vc:[],hv:[],roll:[],button:[],ionizing:[],faimsEnabled:[]})\n        }\n      }\n      //console.log(\"CurrentSweep len=\"+currentSweep.ions.length+\" Sweep storage len=\"+ sweepStorage.length)\n      //console.log(sweepStorage)\n    }, 200);\n    return () => clearInterval(simInterval)\n  });\n  \n  const getPlotlyData = () => {\n    if (sweepStorage.length===0){\n      return []\n    }\n    //Eka näin\n    if (sweepStorage.length===1){\n      return [{\n        x: sweepStorage[sweepStorage.length-1].vc,\n        y: sweepStorage[sweepStorage.length-1].ions,\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: {color: 'red'},\n      }\n      ]\n    }\n\n    if (2<sweepStorage.length){\n      return [\n        {\n          x: sweepStorage[sweepStorage.length-2].vc,\n          y: sweepStorage[sweepStorage.length-2].ions,\n          type: 'scatter',\n          name: 'previous',\n          mode: 'lines',\n          marker: {color: 'gray'},\n        },\n        {\n        x: sweepStorage[sweepStorage.length-1].vc,\n        y: sweepStorage[sweepStorage.length-1].ions,\n        type: 'scatter',\n        name: 'latest',\n        mode: 'lines+markers',\n        marker: {color: 'red'},\n      }\n      ]\n    }\n\n  }\n\n\n    const faimsChange = (newSetting) => {\n      console.log(\"TODO RAUDALLE FAIMS VIESTIÄ\",newSetting)\n      const faimsMsg=new Fpgamsg_faims(newSetting)\n      setFaimsAsetukset(newSetting)\n      faimsHardware.do_setFaims(faimsMsg).then(\n        function(value) { /* code if successful */ },\n        function(error) { /* code if some error */ }\n      );\n\n    }\n\n\n\n    const vcChange = (newSetting) => {\n      const vcMsg=new Fpgamsg_vc(newSetting,flagAsetukset.sweepUp)\n      console.log(\"TODO RAUDALLE VC VIESTIÄ\",newSetting,\" MUOTOON \",vcMsg)\n      setVcAsetukset(newSetting)\n      faimsHardware.do_setVc(vcMsg).then(\n        function(value) { /* code if successful */ },\n        function(error) { /* code if some error */ }\n      );\n    }\n\n    const flagsChange= (flagname,flagvalue) => {\n      console.log(\"Muuttuu lippu \"+flagname+\" arvo \"+flagvalue)\n      flagAsetukset[flagname]=Boolean(flagvalue)\n\n      if ((flagname===\"sweepOn\")&&(Boolean(flagvalue))){\n        setSweepStorage([])\n      }\n      \n      if (flagAsetukset.pos && flagAsetukset.neg){ //Now both\n        flagAsetukset.pos=false\n        flagAsetukset.neg=false\n      }\n\n      setFlagasetukset({...flagAsetukset})\n  \n      faimsHardware.do_setFlags(flagAsetukset).then(\n        function(value) { /* code if successful */ },\n        function(error) { /* code if some error */ }\n      );\n      //TODO KETJUTA TARVII PÄIVITÄ\n      const vcMsg=new Fpgamsg_vc(vcAsetukset,flagAsetukset.sweepUp)\n      faimsHardware.do_setVc(vcMsg).then(\n        function(value) { /* code if successful */ },\n        function(error) { /* code if some error */ }\n      );\n    }\n\n    const downloadFile = (filename,mime,data) =>{\n      // Set up the link\n      var link = document.createElement(\"a\");\n      link.setAttribute(\"target\",\"_blank\");\n      if(Blob !== undefined) {\n          var blob = new Blob([data], {type: mime});\n          link.setAttribute(\"href\", URL.createObjectURL(blob));\n      } else {\n        link.setAttribute(\"href\",mime+\",\" + encodeURIComponent(data));\n      }\n      link.setAttribute(\"download\",filename);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n\n    const handleDownload = () => {\n      const d = new Date();\n\n      downloadFile(\n        \"faimstest\"+\n      d.getSeconds()+\"_\"+\n      d.getMinutes()+\"_\"+\n      d.getHours()+\"_\"+\n      d.getDate()+\"_\"+\n      (d.getMonth()+1)+\"_\"+\n      d.getFullYear()+\"json\"\n\n        ,\"application/json\",JSON.stringify(sweepStorage))\n      setSweepStorage([])\n    }\n\n   //Testdata\n   let random = [];\n   let random2D = [];\n   for (let i = 0; i < 1000; i += 1) {\n    random.push(Math.random());\n    let tmp = [];\n    for (let j = 0; j < 100; j += 1) {\n      tmp.push(Math.random());\n    }\n    random2D.push(tmp);\n  }\n\n  //const textColor = '#AAA'\n\n  return (\n    <>\n      <h1>Faims hardware UI demo</h1>\n\n      {0<sweepStorage.length?<Button variant=\"contained\" color=\"primary\" onClick={handleDownload}> Download {sweepStorage.length} sweeps </Button>:\"\"}\n\n      <HkoFaimsGauges \n        ions={latestReadout.ions} \n        vc={latestReadout.vc} \n        hvdc={latestReadout.hv} \n        peakField={FaimsMath.DefaultToTownsend(FaimsMath.faimsPeakVoltage(latestReadout.hv,latestReadout.vc,faimsAsetukset.pulse,faimsAsetukset.period))}\n        returnField={FaimsMath.DefaultToTownsend(FaimsMath.faimsReturnVoltage(latestReadout.hv,latestReadout.vc,faimsAsetukset.pulse,faimsAsetukset.period))}\n        compensationField={FaimsMath.DefaultToTownsend(latestReadout.vc)}\n      />\n\n\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper>\n            <Box p={2}>\n              <HkoFaimsForm values={faimsAsetukset} changeEvent={faimsChange}></HkoFaimsForm>\n              <HkoFaimsWaveVisual pulse={faimsAsetukset.pulse} period={faimsAsetukset.period} coil={faimsAsetukset.coil}></HkoFaimsWaveVisual>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper>\n            <Box p={2}>  \n              <HkoFaimsFlags \n                //values={flagAsetukset}  EI TOIMI\n                sweepOn={flagAsetukset.sweepOn}\n                shutdown={flagAsetukset.shutdown}\n                ionize={flagAsetukset.ionize}\n                pos={flagAsetukset.pos}\n                neg={flagAsetukset.neg}\n                pumpOn={flagAsetukset.pumpOn}\n                sweepUp={flagAsetukset.sweepUp}\n                attention={flagAsetukset.attention}\n                faimsEnable={flagAsetukset.faimsEnable}\n\n              onStateChange={flagsChange}></HkoFaimsFlags>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper>\n            <Box p={2}>\n              <HkoVcSweep values={vcAsetukset} sweepUp={true} changeEvent={vcChange}></HkoVcSweep>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      \n      <SmoothieComponent\n        responsive\n        height={300}\n        tooltip\n        series={[\n          {\n            data: ts1,\n            strokeStyle: { g: 255 },\n            fillStyle: { g: 255 },\n            lineWidth: 1,\n          }\n        ]}\n      />      \n\n      <br></br>\n      <div>\n\n\n  <br />\n  <Plot data={getPlotlyData()} layout={ {width:1024, height: 600, title: 'VC plot', autosize:true} } />\n\n\n</div>\n\n    </>\n  )\n}\n\n/*\n<FormControl component=\"fieldset\">\n<FormLabel component=\"legend\">AverageType</FormLabel>\n<RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\n  <FormControlLabel value=\"all\" control={<Radio />} label=\"All\" />\n  <FormControlLabel value=\"average\" control={<Radio />} label=\"Average\" />\n  <FormControlLabel value=\"average1/3\" control={<Radio />} label=\"Average 1/3\" />\n  <FormControlLabel value=\"average2/3\" control={<Radio />} label=\"Average 2/3\" />\n  <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"(Disabled option)\" />\n</RadioGroup>\n</FormControl>\n*/\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}